<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.jboss.sample</groupId>
	<artifactId>eap6-maven</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>GSS Maven Sample for JBoss EAP 6 </description>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Define the version of JBoss' Java EE 6 APIs and Tools we want to import. -->
		<javaee6.with.tools.version>1.0.1.Final</javaee6.with.tools.version>

		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 3.0.0.Beta1-redhat-1 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <javaee6.spec.version>3.0.0.Beta1-redhat-1</javaee6.spec.version> -->

		<!-- required maven version -->
		<maven.version>3.0.0</maven.version>
		
		<!-- Spring -->
		<!-- <spring.version>2.5.6.SEC02</spring.version> -->
		<!--  need a newer Spring ... -->
		<spring.version>3.2.8.RELEASE</spring.version>
		
		<!-- working logging... -->
		<slf4j.version>1.6.3</slf4j.version>
	</properties>

	<prerequisites>
		<maven>3.0.0</maven>
	</prerequisites>

	<dependencyManagement>
		<dependencies>
		
			<dependency>
				<groupId>org.jboss.sample.ejb.mdb</groupId>
				<artifactId>MDB</artifactId>
				<type>ejb</type>
				<version>${project.version}</version>
			</dependency>
		
			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with tools stack (you can 
				read this as the JBoss stack of the Java EE 6 APIs, with some extras tools 
				for your project, such as Arquillian for testing) -->
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${javaee6.with.tools.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- The JEE JMS API -->
			<dependency>
				<groupId>org.jboss.javaee</groupId>
				<artifactId>jboss-jms-api</artifactId>
				<version>1.1.0.GA</version>
				<scope>provided</scope>
			</dependency>

			<!-- Logging is nice to have -->
			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>3.1.2.GA</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- IBM MQ - See README.txt in the Clients resources folder -->
			<dependency>
				<groupId>com.ibm.mq</groupId>
				<artifactId>com.ibm.mq</artifactId>
				<version>7.5.0.2</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.mq</groupId>
				<artifactId>com.ibm.mq.connector</artifactId>
				<version>7.5.0.2</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.mq</groupId>
				<artifactId>com.ibm.mq.jta</artifactId>
				<version>7.5.0.2</version>
			</dependency>
			<dependency>
				<groupId>com.ibm.mq</groupId>
				<artifactId>com.ibm.mq.jmqi</artifactId>
				<version>7.5.0.2</version>
			</dependency>
<!--
			<dependency>
				<groupId>com.ibm.mq</groupId>
				<artifactId>wmq.jmsra</artifactId>
				<version>7.5.0.2</version>
				<type>rar</type>
				<scope>provided</scope>
			</dependency>
-->	
			
			<!-- Client dependencies -->
			<dependency>
      			<groupId>org.jboss.as</groupId>
      			<artifactId>jboss-as-ejb-client-bom</artifactId>
      			<version>7.1.2.Final</version>
      			<type>pom</type>
  			</dependency>
  			<dependency>
        		<groupId>org.hornetq</groupId>
        		<artifactId>hornetq-core-client</artifactId>
        		<version>2.2.18.Final</version>
    		</dependency>
    		<dependency>
        		<groupId>org.hornetq</groupId>
        		<artifactId>hornetq-jms-client</artifactId>
        		<version>2.2.18.Final</version>
    		</dependency>
    		<dependency>
        		<groupId>org.jboss.netty</groupId>
        		<artifactId>netty</artifactId>
        		<version>3.2.7.Final</version>
    		</dependency>
		
			<!-- Spring Dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jmx</artifactId>
				<version>2.0.8</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
		
		</dependencies>
<!--		
		<dependency>
  			<groupId>org.jboss.client</groupId>
  			<artifactId>jboss-client</artifactId>
  			<version>5.1.0.CR1</version>
		</dependency>
-->

	</dependencyManagement>

	<dependencies>
		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JPA API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.0-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the EJB API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is shipped in JBoss AS 7 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.2.0.Final</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Import the JSF API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.faces</groupId>
			<artifactId>jboss-jsf-api_2.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Now we declare any tools needed -->

		<!-- Annotation processor to generate the JPA 2.0 metamodel classes for 
			typesafe criteria queries -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>1.1.1.Final</version>
			<scope>provided</scope>
		</dependency>

		<!-- Needed for running tests (you may also use TestNG) -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Optional, but highly recommended -->
		<!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) 
			JPA from JUnit/TestNG -->
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging</artifactId>
		</dependency>
		
		<!-- just pulled in for debugging purposes... -->
		<dependency>
			<groupId>org.jboss.ironjacamar</groupId>
			<artifactId>ironjacamar-core-impl</artifactId>
			<version>1.1.0.Final</version>
		</dependency>

	</dependencies>

	<build>
		<!-- plugin versions -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<enforceDeploymentDescriptor>false
						</enforceDeploymentDescriptor>
						<ejbVersion>3.0</ejbVersion>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.0.0,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<!-- plugins -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>[${maven.version},)</version>
									<message>Check for Maven version &gt;=${maven.version} failed.
										Update your Maven install.</message>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- the versions plugin can be used to check for new plugin or dependency 
				versions -->
			<!-- mvn versions:display-plugin-updates -->
			<!-- mvn versions:display-dependency-updates -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>1.3.1</version>
			</plugin>
			
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
			<!-- To use, run: mvn package jboss-as:deploy -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.1.2.Final</version>
			</plugin>

			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<configuration>
					<!-- copy EAR to deployments -->
					<bundleDir>deployments></bundleDir>
							
					<defaultJavaBundleDir>lib/</defaultJavaBundleDir>
          			<skinnyWars>true</skinnyWars>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- Modules -->
	<modules>
		<module>Clients</module>
		<module>EJB</module>
		<module>WAR</module>
		<module>EAR</module>
	</modules>
</project>
